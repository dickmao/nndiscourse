name: CI

on:
  pull_request:
    paths-ignore:
    - '**.md'
    - '**.rst'
  push:
    paths-ignore:
    - '**.md'
    - '**.rst'
    branches-ignore:
    - 'master'
    - 'main'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        emacs_version: [25.3, 26.3, 27.2]
        ruby_version: [2.6]
        python_version: [3.6]

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python_version }}

    - uses: actions/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby_version }}

    - uses: purcell/setup-emacs@master
      with:
        version: ${{ matrix.emacs_version }}

    - name: paths
      run: |
        echo "$HOME/local/bin" >> $GITHUB_PATH
        echo "$HOME/local/cask/bin" >> $GITHUB_PATH
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        echo "LD_LIBRARY_PATH=$HOME/.local/lib" >> $GITHUB_ENV

    - uses: actions/cache@v2
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/rubocop_cache
        key: ${{ runner.os }}-rubocop

    - uses: actions/cache@v2
      if: startsWith(runner.os, 'macOS')
      with:
        path: ~/Library/Caches/rubocop_cache
        key: ${{ runner.os }}-rubocop

    - uses: actions/cache@v2
      with:
        path: ~/local
        key: ${{ runner.os }}-local-000

    - uses: actions/cache@v2
      with:
        path: ~/melpazoid-master
        key: melpazoid-000

    - uses: actions/cache@v2
      with:
        path: ~/.emacs.d
        key: emacs.d

    - uses: actions/cache@v2
      with:
        path: ~/.cask
        key: cask-000

    - uses: actions/cache@v2
      with:
        path: nndiscourse/vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-

    - name: bundler
      run: |
        gem install --user-install bundler

    - name: apt-get
      if: startsWith(runner.os, 'Linux')
      run: |
        sudo apt-get -yq update
        DEBIAN_FRONTEND=noninteractive sudo apt-get -yq install gnutls-bin sharutils gnupg2 dirmngr libreadline-dev libcurl4-openssl-dev

    - name: gnupg
      if: startsWith(runner.os, 'macOS')
      run: brew list gnupg &>/dev/null || HOMEBREW_NO_AUTO_UPDATE=1 brew install gnupg

    - name: versions
      run: |
        ruby --version
        rake --version
        bundle --version
        curl --version
        emacs --version
        gpg --version

    - name: cask
      run: |
        sh tools/install-cask.sh
        cask link list

    - name: test
      run: |
        make test-run
        make test
